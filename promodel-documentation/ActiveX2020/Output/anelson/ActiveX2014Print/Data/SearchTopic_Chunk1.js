define({"77":{i:0.00615805295383627,u:"../Content/Topics/Populate.htm",a:"Syntax:  Populate Description:  Populates the ProModelData object with the current, loaded model data. Call this method before using the data object. You must call the Populate method to initialize the ProModelData object with the model’s current information. Use Populate each time you open or close ...",t:"Populate"},"78":{i:0.00615805295383627,u:"../Content/Topics/SelectMainRecordByIndex.htm",a:"Syntax:  SelectMainRecordByIndex RecordType, RecordIndex Description:  Selects a record by its Record Index (row number).  This method is very useful in looping through all the records in a table. Parameters: RecordType (Long)  The Record Type (Table Number) of the table you wish to work with. ...",t:"SelectMainRecordByIndex"},"79":{i:0.00615805295383627,u:"../Content/Topics/SelectMainRecordByName.htm",a:"Syntax:  SelectMainRecordByName RecordType, RecordName Description:  Selects a record by its Name or ID value.  This method can only be used with record types that have a name or ID field.  If the table does not have a Name or ID field, you must use the SelectMainRecordByIndex method. Parameters: ...",t:"SelectMainRecordByName"},"80":{i:0.00615805295383627,u:"../Content/Topics/SetIntFieldValue.htm",a:"Syntax:  SetIntFieldValue RecordType, FieldIndex, FieldValue Description:  Changes the value for the specified integer field of the selected record. Parameters: RecordType (Long)  The Record Type (Table Number) of the table you wish to work with. FieldIndex (Long)  The Field Index (Column Number) of ...",t:"SetIntFieldValue"},"81":{i:0.00615805295383627,u:"../Content/Topics/SetRealFieldValue.htm",a:"Syntax:  RecordType, FieldIndex, FieldValue Description:  Changes the value for the specified real field of the selected record.  When setting values for real fields, it is best to place the number into a variable of the correct type, then use the variable in the method call.  This will avoid ...",t:"SetRealFieldValue"},"82":{i:0.00615805295383627,u:"../Content/Topics/SetStringFieldValue.htm",a:"Syntax:  SetStringFieldValue RecordType, FieldIndex, FieldValue Description:  Changes the value for the specified string field of the selected record. Parameters: RecordType(Long)  The Record Type (Table Number) of the table you wish to work with. FieldIndex (Long)  The Field Index (Column Number) ...",t:"SetStringFieldValue"},"83":{i:0.00615805295383627,u:"../Content/Topics/The RDBDataServer Object.htm",a:"The  RDBDataServer Object To use the RDBDataServer object it must be registered, which should have done automatically during installation. This library is listed as RDBSrv in the references in your VB Editor.   As you work with the RDBDataServer, keep in mind that you are working with a database, ...",t:"The RDBDataServer Object"},"84":{i:0.00615805295383627,u:"../Content/Topics/CloseFile.htm",a:"Syntax:  CloseFile Description:  Closes the previously opened RDB file. Parameters:  None Returns:  Nothing Example:This example opens the mfg_cost.rdb, selects data, displays it, then closes the file. Sub Get_Data() \tDim RDBObj As Object \tDim x   \tSet RDBObj = CreateObject(\"RDBDataServer\") ...",t:"CloseFile"},"85":{i:0.00615805295383627,u:"../Content/Topics/FieldName.htm",a:"Syntax:  FieldName Description:  Returns the name of the current field. Parameters:  None Returns:  The name of the specified field (column), or “invalid” if the SelectData specifications are not valid. Example:This example opens the mfg_cost.rdb, displays some of the data, then closes the file. Sub ...",t:"FieldName"},"86":{i:0.00615805295383627,u:"../Content/Topics/GetPositionInfo.htm",a:"Syntax:  GetPositionInfo Description:  Returns the scenario, period, replication, table, field, record and data value of the current selection.  This can be useful in loops. Returns:  Details of current data selection, as follows: Scenario: Scenario Name Replication: Replication Number Period: ...",t:"GetPositionInfo"},"87":{i:0.00615805295383627,u:"../Content/Topics/GetValue.htm",a:"Syntax:  GetValue Description:  Returns the data value for the current data selection. Parameters:  None Returns:  The data value of the current position (or zero if the current selection is not valid). Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes the ...",t:"GetValue"},"88":{i:0.00615805295383627,u:"../Content/Topics/OpenFile.htm",a:"Syntax:  OpenFile FileName Description:  Call this function first to open and load the proper .RDB file. Parameters:   FileName (String)  Path and filename of any valid .rdb file. Returns:  Nothing Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes the file. ...",t:"OpenFile"},"89":{i:0.00615805295383627,u:"../Content/Topics/PeriodName.htm",a:"Syntax:  PeriodName Description:  Returns the name of the Period in the current data selection. Parameters:  None Returns:  The current period name, or “invalid” if the current selection is not valid. Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes the ...",t:"PeriodName"},"90":{i:0.00615805295383627,u:"../Content/Topics/PositionIsValid.htm",a:"Syntax:  PositionIsValid Description:  Check the data for the most recent data selection \u0026 return “True” if it is valid, “False” if it is not.  This method is a little tricky, because it really doesn’t do much unless it is used in an “If…Then” or “Select Case” statement (the ‘x = ...",t:"PositionIsValid"},"91":{i:0.00615805295383627,u:"../Content/Topics/RecordName.htm",a:"Syntax:  RecordName Description:  Returns the name of the Record in the current data selection. Parameters:  None Returns:  The current record name, or “invalid” if the current selection is not valid. Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes the ...",t:"RecordName"},"92":{i:0.00615805295383627,u:"../Content/Topics/ReplicationNumber.htm",a:"Syntax:  ReplicationNumber Description:  Returns the number of the Replication in the current data selection. Parameters:  None Returns:  The current replication number, or “invalid” if the current selection is not valid. Example:This example opens the mfg_cost.rdb, gets and displays some of the ...",t:"ReplicationNumber"},"93":{i:0.00615805295383627,u:"../Content/Topics/ScenarioName.htm",a:"Syntax:  ScenarioName Description:  Returns the name of the Scenario in the current data selection. Parameters:  None Returns:  The current scenario name, or “invalid” if the current selection is not valid. Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes ...",t:"ScenarioName"},"94":{i:0.00615805295383627,u:"../Content/Topics/SelectData.htm",a:"Syntax SelectData Scenario, Replication, Period, Table, Field, Record Description:  Retrieves the specified data element from the .rdb file.  All of the parameters must be specified, even if there is only one scenario, replication or period. Parameters: Scenario\t(Long)  Scenario number containing ...",t:"SelectData"},"95":{i:0.00615805295383627,u:"../Content/Topics/TableName.htm",a:"Syntax:  TableName Description:  Returns the name of the Table in the current data selection. Parameters:  None Returns:  The current table name, or “invalid” if the current selection is not valid. Example:This example opens the mfg_cost.rdb, gets and displays some of the data, then closes the file. ...",t:"TableName"},"96":{i:0.011392445243797,u:"../Content/Topics/AppendixA.htm",a:"ProModelData Table Definitions To help you determine the RecordType values, the pmconst.bas file defines the constants used in the examples. For the complete list of ProActiveX constants, click  here . The following is a list of RecordType values, Visual Basic record type constants, and field types ...",t:"Appendix: Table Definitions"},"97":{i:0.277436948161361,u:"../Content/Topics/Locations Table (1)_ pmd.htm",a:"Location Clock Downtimes Subtable (25): PMD_Table_LocClockDTs Location Entry Downtimes Subtable (26): PMD_Table_LocEntryDTs Location Usage Downtimes Subtable (27): PMD_Table_LocUsageDTs Location Setup Downtimes Subtable (28): PMD_Table_LocSetupDTs Location Called Downtimes Subtable (63): ...",t:"Locations Table (1): PMD_Table_Location"},"98":{i:0.00615805295383627,u:"../Content/Topics/RuntimeTable.htm",a:"Locations Runtime Fields (1): pmrTblLocation Single Capacity Locations Runtime Fields (2): pmrTblLocSingle Multi Capacity Locations Runtime Fields (3): pmrTblLocMulti Resource Runtime Fields (5): pmrTblResource Resource States (By Percentage) Runtime Fields (6): pmrTblResState Node Entries Runtime ...",t:"Runtime Table."},"99":{i:0.00615805295383627,u:"../Content/Topics/ResultCodes(Errors).htm",a:"Result Codes (Errors)",t:"Result Codes (Errors)"},"100":{i:0.00615805295383627,u:"../Content/Topics/Events.htm",a:"Events",t:"Events"},"101":{i:0.00615805295383627,u:"../Content/Topics/PathColors.htm",a:"Path Colors",t:"Path Colors"},"102":{i:0.00615805295383627,u:"../Content/Topics/Menu Ids.htm",a:"Menu Ids This method is defined as: MenuCommand\u003cMenuId\u003e,\u003cParameter\u003e For most commands, Parameter has no meaning and a zero should be passed. The following is a list of menu IDs that have no equivalent method in the CProModel interface.    ",t:"Menu Ids"},"103":{i:0.0109998911852591,u:"../Content/Word Imports 1/ProActiveX Constants.htm",a:"  PM = ProModel Application Object Constants PMD = ProModel Data Object Constants PME = ProModel Event Object Constants RDB = RDB Data Server Object Constants RTI = RunTime Object Constants   ---------------------------------------------------------------------------------------- Status Codes ...",t:"ProActiveX Constants"},"104":{i:0.00615805295383627,u:"../Content/Topics/ActiveXIX.htm",a:"Index",t:"Index"},"105":{i:0.00615805295383627,u:"../Content/Resources/MasterPages/PCS2010.htm",a:"1 | \n                (Undefined variable: Running HF 1.Running H/F 1) Process Simulator 2010 User Guide |          1     1    ",t:"PCS2010"},"106":{i:0.00615805295383627,u:"../Content/Topics/C-02.htm",a:"  Dim ObjVarName as ProModel.CProModelData Set ObjVarName = CreateObject(“ProModelData”)",t:"C-02"},"107":{i:0.00615805295383627,u:"../Content/Topics/C-03.htm",a:"  Dim ObjVarName as ProModel.CRuntime Set ObjVarName = CreateObject(“ProModel.CRuntime”)",t:"C-03"},"108":{i:0.00615805295383627,u:"../Content/Topics/C-04.htm",a:"  ProModelPM Type Library (ProModel product) Dim ObjVarName as PromodelPM.Application",t:"C-04"},"109":{i:0.00615805295383627,u:"../Content/Topics/C-05.htm",a:"  Dim ObjVarName as PromodelMM.Data Set ObjVarName = CreateObject(“PromodelMM.Data”)",t:"C-05"},"110":{i:0.00615805295383627,u:"../Content/Topics/C-06.htm",a:"  Dim ObjVarName as PromodelMM.Runtime Set ObjVarName = CreateObject(“PromodelMM.Runtime”)",t:"C-06"},"111":{i:0.00615805295383627,u:"../Content/Topics/C-07.htm",a:"  PromodelSM Type Library (ServiceModel product) Dim ObjVarName as PromodelSM.Application",t:"C-07"},"112":{i:0.00615805295383627,u:"../Content/Topics/Private WithEvents pmEve.htm",a:"That will place a pmEventsObject variable in the Object drop-down list, and a procedure called PmEventsHandler in the Procedure/Events drop-down list at the top of the Code Window. When you select the object variable (pmEventsObject) from the Object drop-down list and PmEventsHandler from the ...",t:"Private WithEvents pmEventsObject As PMCPLib.PmEvents"},"113":{i:0.00615805295383627,u:"../Content/Topics/Set ObjVarName = CreateO.htm",a:"Set ObjVarName = CreateObject(“PromodelPM.Application”)   Dim ObjVarName as PromodelPM.Data Set ObjVarName = CreateObject(“PromodelPM.Data”)   Dim ObjVarName as PromodelPM.Runtime Set ObjVarName = CreateObject(“PromodelPM.Runtime”)   PromodelMM Type Library (MedModel product)",t:"Set ObjVarName = CreateO"},"114":{i:0.00615805295383627,u:"../Content/Topics/Set ObjVarName = CreateO1.htm",a:"Set ObjVarName = CreateObject(“PromodelSM.Application”)   Dim ObjVarName as PromodelSM.Data Set ObjVarName = CreateObject(“PromodelSM.Data”)   Dim ObjVarName as PromodelSM.Runtime Set ObjVarName = CreateObject(“PromodelSM.Runtime”) Other Objects ProModel also provides a few other objects that will ...",t:"Other Objects"},});