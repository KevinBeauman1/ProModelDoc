<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="2" MadCap:lastHeight="1367" MadCap:lastWidth="1003" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/Stylesheets/PM-MM Stylesheet 2, linked.css" rel="stylesheet" />
    </head>
    <body>
        <h1>OwnedResourceUnit</h1>
        <h5>
            <MadCap:keyword term="functions:ownedresourceunit;ownedresourceunit" />Function</h5>
        <h2>Syntax samples</h2>
        <p>OwnedResourceUnit({&lt;expression &gt;})</p>
        <p>OwnedResourceUnit(2)<br />OwnedResourceUnit(ResQty())<br />OwnedResourceUnit()</p>
        <h2>Description</h2>
        <p>Returns the unit number of the nth resource currently owned by the entity making the function call. The function parameter indicates the position of the resource in the chronological list of owned resources. For example, OwnedResourceUnit(1) returns the unit number of longest owned resource in the list and so on.</p>
        <p>When used without a parameter, this function returns the unit number of the most recent resource that the entity captured and still owns. If the parameter value is not within the range of the resource list, or if the entity currently does not own a resource, the function will return a 0 (zero) without a warning or error message.</p>
        <p>A preempted resource is NOT removed from the list but marked temporarily to indicate that the preemptee does not own the resource. When the resource resumes the original process after being preempted, it retains its original position in the list.</p>
        <h2>Valid In</h2>
        <p>Activity, arrival and route logic.</p>
        <h2>Components</h2>
        <p><b>&lt;expression&gt;</b>
        </p>
        <p>The nth resource currently owned by the entity making the function call. When this parameter is not used, the function returns the unit number of the last resource captured that is still owned by the entity.</p>
        <h2>Example</h2>
        <p>Suppose we want to track which units an entity is capturing and log that out to a file. Let’s also suppose the resource has 5 units and was captured using the statement Get Operator. We know the entity owns the resource Operator, but we do not know which unit was captured. We want to log out when the resource was captured and which unit, so we use the following logic:</p>
        <p class="p_11">Write fileResTrack, “Operator”<br />Write fileResTrack, OwnedResourceUnit()<br />Writeline fileResTrack, Clock(min)</p>
        <h5>See Also</h5>
        <p><a href="ownedresource.htm" class="a_11">OwnedResource</a>, <a href="get.htm" class="a_11">Get</a>, Jointly Get, <a href="use.htm" class="a_11">Use</a>, and <a href="free.htm" class="a_11">Free</a></p>
    </body>
</html>