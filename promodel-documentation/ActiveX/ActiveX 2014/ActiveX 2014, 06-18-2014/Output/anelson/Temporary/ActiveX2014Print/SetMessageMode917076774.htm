<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="512" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="The ProModel Application Object" MadCap:medium="print" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="PDF">
    <head><title>SetMessageMode</title>
        <link href="file:///C:/_git/ProModel.Documentation/ActiveX/ActiveX 2014/ActiveX 2014, 06-18-2014/Output/anelson/Temporary/ActiveX2014Print/ActiveX2014Print_50DDC0F7/Resources/Stylesheets/Promodel.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h2 class="statements" MadCap:xrefTargetName="SetMessageMode"><a MadCap:generatedBookmark="TOC" name="SetMessageMode"></a><a name="C-01_2914010915_490577"></a><a name="C-01_2914010915_LoadDefaults"></a>
            <MadCap:keyword term="SetMessageMode;ProModel Application Object:SetMessageMode" />SetMessageMode</h2>
        <p class="p"><span class="Lower_Label" style="font-weight: bold;">Syntax</span><span class="_Override" style="font-weight: bold;">:  </span>SetMessageMode <span class="_Override" style="color: #0000ff;">Flags</span></p>
        <p class="p"><span class="Lower_Label" style="font-weight: bold;">Description</span><span class="_Override" style="font-weight: bold;">:</span>  This method only applies to standard message boxes, it will have no effect on error messages, translation dialog or data dialogs accessed from the menu.  With this method you can control what types of messages to display or not to display.  Types are based on which control buttons are shown in the message box.  The type(s) included in the <span class="_Override" style="font-style: italic;">Flags</span> parameter will be the only types shown, all others will execute the default option, without showing the message box.  If you wish to execute a non-default option without showing the message box, you can do so through the ProModel Event Handler.</p>
        <p class="p"><span class="Lower_Label" style="font-weight: bold;">Parameters</span>:</p>
        <p class="objects"><span class="_Override" style="color: #0000ff;">Flags</span><span class="_Override" style="font-style: italic;">  <![CDATA[ ]]></span>	(Long)  See list of flags below.</p>
        <p class="p"><span class="Lower_Label" style="font-weight: bold;">Returns</span><span class="_Override" style="font-weight: bold;">:</span>  Nothing</p>
        <p class="p"><span class="Lower_Label" style="font-weight: bold;">Flags</span>: Flags can be combinged using "+" or "OR", except for values 0 and 1.</p>
        <p class="objects">0		 Do not display any messages</p>
        <p class="objects">1	 	Show Information messages</p>
        <p class="objects">2 		Show messages with OK button</p>
        <p class="objects">4 		Show messages with OK &amp; Cancel buttons</p>
        <p class="objects">8		 Show messages with Retry &amp; Cancel buttons</p>
        <p class="objects">16		 Show messages with Yes &amp; No buttons</p>
        <p class="objects">32 		Show messages with Yes, No &amp; Cancel buttons</p>
        <p class="objects">64		 Show messages with Abort, Retry and Ignore buttons</p>
        <p class="objects">-1		 Show All messages</p>
        <p class="Example">&#160;</p>
        <p class="Component_description"><span class="_Override" style="font-weight: bold;">Example:</span>This example runs a simulation, then opens the output statistics module without prompting the user.</p>
        <p class="Component_description">&#160;</p>
        <p class="objects">Sub SkipMessages()</p>
        <p class="objects2">	Dim pmObject As ProModel.CProModel</p>
        <p class="objects2">&#160;</p>
        <p class="objects2">	Set pmObject = CreateObject("ProModel")</p>
        <p class="objects2">	pmObject.LoadModel "mfg_cost.mod"</p>
        <p class="objects2" style="font-weight: bold;">	pmObject.SetMessageMode <span class="_Override" style="color: #0000ff;">0</span></p>
        <p class="objects2">	pmObject.Simulate</p>
        <p class="objects2">&#160;</p>
        <p class="objects2">	Set pmObject = Nothing</p>
        <p class="objects">End Sub</p>
    </body>
</html>