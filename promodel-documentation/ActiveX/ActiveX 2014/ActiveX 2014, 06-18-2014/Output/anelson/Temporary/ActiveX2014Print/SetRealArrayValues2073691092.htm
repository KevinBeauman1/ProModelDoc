<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="621" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="The ProModel Runtime Object" MadCap:medium="print" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="PDF">
    <head><title>SetRealArrayValues</title>
        <link href="file:///C:/_git/ProModel.Documentation/ActiveX/ActiveX 2014/ActiveX 2014, 06-18-2014/Output/anelson/Temporary/ActiveX2014Print/ActiveX2014Print_50DDC0F7/Resources/Stylesheets/Promodel.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h2 class="statements" MadCap:xrefTargetName="SetRealArrayValues"><a MadCap:generatedBookmark="TOC" name="SetRealArrayValues"></a><a name="C-01_2914010915_462023"></a>
            <MadCap:keyword term="SetRealArrayValues" />SetRealArrayValues</h2>
        <p class="p"><span class="_Override" style="font-weight: bold;">Syntax:  </span>SetRealArrayValues</p>
        <p class="p"><span class="_Override" style="font-weight: bold;">Description:  </span>Sets the values of a real array during simulation runtime. </p>
        <p class="p"><span class="_Override" style="font-weight: bold;">Parameters:</span>
        </p>
        <p class="objects">ArrayName (String) The name of the real array.</p>
        <p class="objects">Subset 	(String) A selection of elements from the real array. The syntax is the same as the syntax used in VBA to index an array. For instance, to get elements 1 to 10 from an array set Subset to "1 to 10". For a two-dimensional array you would use "1 to 10, 1 to 10". </p>
        <p class="objects">psa 	(variable) A real array to be injected into the specified ProModel array. </p>
        <p class="p"><span class="_Override" style="font-weight: bold;">Returns: </span> Nothing</p>
        <p class="Component">Example:</p>
        <p class="p"><span class="_Override" style="font-weight: normal;">This example launches a simulation and displays part of the contents of a real integer array after 1 hour of simulation time has elapsed. Notice that the first thre entries have been set to 1. </span>
        </p>
        <p>&#160;</p>
        <p class="objects">Sub SetRealArrayValues()</p>
        <p class="objects2">	Dim pmObject As ProModel.CProModel</p>
        <p class="objects2">	Dim pmRuntime As ProModel.CRuntime</p>
        <p class="objects2">	Dim CurSimTime As Double</p>
        <p class="objects2">&#160;</p>
        <p class="objects2">	Set pmObject = CreateObject("ProModel")</p>
        <p class="objects2">	Set pmRuntime = CreateObject("Promodel.CRuntime")</p>
        <p class="objects2">	pmObject.LoadModel "Tanker.mod"</p>
        <p class="objects2">	pmObject.Simulate</p>
        <p class="objects2">	curSimTime = 0</p>
        <p class="objects2">	Do While curSimTime &lt; 3600</p>
        <p class="objects3">		pmObject.GetSimTime curSimTime</p>
        <p class="objects3">		DoEvents</p>
        <p class="objects2">&#160;</p>
        <p class="objects2">	Loop</p>
        <p class="objects2">	Dim realArray</p>
        <p class="objects2">	Dim n As Long</p>
        <p class="objects2">	Dim arrayContents As String</p>
        <p class="objects2">	Dim inVals(3) As Double</p>
        <p class="objects2">&#160;</p>
        <p class="objects2">	inVals(1) =0.1</p>
        <p class="objects2">	inVals(2) =0.1</p>
        <p class="objects2">	inVals(3) =0.1 </p>
        <p class="objects2"><span class="_Override" style="font-weight: bold;">pmRuntime.SetRealArrayValues "Tank_State", "1 to 10", invVals</span>
        </p>
        <p class="objects2">	pmRuntime.GetRealArrayValues "Tank_State", "1 to 10", realArray</p>
        <p class="objects2">	arrayContents = "Array Contents:" &amp; Chr(13)</p>
        <p class="objects2">	Next n</p>
        <p class="objects2">	MsgBox arrayContents</p>
        <p class="objects">End Sub</p>
    </body>
</html>