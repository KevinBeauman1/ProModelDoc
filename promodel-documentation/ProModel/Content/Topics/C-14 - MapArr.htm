<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="2" MadCap:lastHeight="677.5" MadCap:lastWidth="558" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/Stylesheets/PM-MM Stylesheet 2, linked.css" rel="stylesheet" />
    </head>
    <body>
        <h2 class="statements"><a name="C-14_4292047180_1105619"></a>MapArr</h2>
        <h5 class="_valid_in">
            <MadCap:keyword term="General action statements:MAPARR;MAPARR" />General Action Statement</h5>
        <h4 class="_rules_statements">Syntax samples</h4>
        <p class="Syntax_body">MapArr &lt;array name&gt;{TO &lt;variable name&gt;}</p>
        <p class="Syntax_body">MapArr Array1 TO Var10</p>
        <p class="Syntax_body">MapArr Array5</p>
        <h5 class="_rules_statements">Description</h5>
        <p class="p">Starting with the variable you specify, the MapArr statement maps each individual cell of an array to a unique variable (i.e., if you define 12 cells for the array, the array will map to 12 variables). To display the cell value of a mapped array, create a variable graphic for the variable to which you mapped the array cell. <MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.MedModel">MedModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ProModel">ProModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ServiceModel">ServiceModel</MadCap:conditionalText> collects statistics for an array cell through the variable to which you mapped the cell. (Choose “Basic” or “Time Series” statistics for a mapped variable, then view the variable in the Statistics Output program.) The initial value of the array cells are not written to the variables. Only changes to the array are recorded. </p>
        <p class="p">&#160;</p>
        <p class="p">If you do not specify the optional variable name in the statement, <MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.MedModel">MedModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ProModel">ProModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ServiceModel">ServiceModel</MadCap:conditionalText> will unmap the array from the variables that you originally mapped it. You can remap arrays by using the MapArr statement.</p>
        <h5 class="_valid_in">Valid In</h5>
        <p class="p">Any logic.</p>
        <h4 class="_rules_statements">Components</h4>
        <p class="Component">&lt;array name&gt;</p>
        <p class="p">Map, unmap, or remap this array. The brackets, [ ], are unnecessary after the array name in the statement.</p>
        <p class="Component">TO &lt;variable name&gt;</p>
        <p class="p">The optional name of the variable to which you map the first cell in the array. If you do not specify a name, <MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.MedModel">MedModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ProModel">ProModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ServiceModel">ServiceModel</MadCap:conditionalText> will unmap the array from the variables.</p>
        <h4 class="_rules_statements">Example</h4>
        <p class="p">Suppose you want to dynamically view an array, Storage_Array, during simulation. The array has a dimension of 2x3x2 (a three-dimensional ar<MadCap:keyword term="Arrays" />ray with 2 cells in the first dimension, 3 cells in the second, and 2 cells in the third) and contains a total of 12 cells (multiply  dimensions together). </p>
        <p class="p">&#160;</p>
        <p class="p">Since you already used the first 8 of the 30 variables defined in the model, Var1 through Var30, you will start mapping the array with Var9 and end with Var20 (the 12th variable from Var9 listed in the Variables module). In the initialization logic, use the following statement:</p>
        <p class="p">&#160;</p>
        <p class="p">MapArr Storage_Array TO Var9</p>
        <p class="p">&#160;</p>
        <p class="p">The cells in Storage_Array will map to variables Var9 to Var20 in the following order:</p>
        <p class="p">&#160;</p>
        <p class="p">[1,1,1] ... Var9<br />[1,1,2] ... Var10<br />[1,2,1] ... Var11<br />[1,2,2] ... Var12<br />[1,3,1] ... Var13<br />[1,3,2] ... Var14<br />[2,1,1] ... Var15<br />[2,1,2] ... Var16<br />[2,2,1] ... Var17<br />[2,2,2] ... Var18<br />[2,3,1] ... Var19<br />[2,3,2] ... Var20<br /></p>
        <p class="p">&#160;</p>
        <p class="p">In the Variables module, create graphics for variables Var9 through Var20 and place them on the layout. This will allow you to view them during the simulation.</p>
        <p class="p_10">Please Note: Changing the cell value of a mapped array will change the value stored in the array cell And the value of the variable to which you mapped the specific cell. Changing the value of a variable, however, will change ONLY the variable value and NOT the cell value of the mapped array cell. Also, when you use a mapped array in an expression, the array returns the value of the variable mapped to it.</p>
    </body>
</html>