<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="2" MadCap:lastHeight="637" MadCap:lastWidth="558" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/Stylesheets/PM-MM Stylesheet 2, linked.css" rel="stylesheet" />
    </head>
    <body>
        <h2 class="statements"><a name="C-14_4292047180_1103646"></a><a name="C-14_4292047180_17532"></a>Ent()</h2>
        <h5 class="_valid_in">
            <MadCap:keyword term="Type:conversion functions:ENT();ENT()" />Type Conversion Function</h5>
        <h4 class="_rules_statements">Syntax samples</h4>
        <p class="Syntax_body">Ent(&lt;entity name-index number&gt;)</p>
        <p class="Syntax_body">Send 10 Ent(Var1) TO Loc1</p>
        <p class="Syntax_body">Display “Ent A has been combined with” $ Ent(Var1)</p>
        <h5 class="_rules_statements">Description</h5>
        <p class="p">Converts a name-index number or integer to an entity name. Use this function when a statement or function needs the name of an entity whose name index number is stored in an attribute, variable, or some other expression. Ent() can also be used to vary the entity that a statement references by using an expression for the name-index number. When used in an expression expecting a string, such as in the second syntax example above, <MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.MedModel">MedModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ProModel">ProModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ServiceModel">ServiceModel</MadCap:conditionalText> will convert the name-index number to the actual name of the entity.</p>
        <h5 class="_valid_in">Valid In</h5>
        <p class="p">Any logic where an entity name is normally used.</p>
        <h4 class="_rules_statements">Components</h4>
        <p class="Component">&lt;entity name-index number&gt;  </p>
        <p class="p">The name-index number of the entity desired. This component may be an expression which allows the referenced entity to change as the simulation progresses. Real numbers will be treated as integers.</p>
        <h4 class="_rules_statements">Example</h4>
        <p class="p">The logic below orders three batches of five different entity types to a location, Receiving.</p>
        <p class="Syntax_body">Var1 = 1</p>
        <p class="Syntax_body">While Var1 &lt;= 3 Do</p>
        <p class="Syntax_body">{</p>
        <p class="syntax_body_indent">		Order 5 Ent(Var1) TO Receiving</p>
        <p class="syntax_body_indent">		Inc Var1</p>
        <p class="Syntax_body">	}</p>
        <p class="_rules">See Also</p>
        <p class="p">Loc(), Res(), Entity(), and Location().</p>
    </body>
</html>