<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="4057" MadCap:lastWidth="1178">
    <head>
    </head>
    <body>
        <h3>Location Decision Rules Dialog Box<MadCap:keyword term="Locations:rules;Rules:dialog box;Decision:rules:for locations" /></h3>
        <p class="p">The Rules dialog box, opened by double-clicking in the Rules field in the Locations edit table, is used to choose the rule for <MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.MedModel">MedModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ProModel">ProModel</MadCap:conditionalText><MadCap:conditionalText MadCap:conditions="PM-MM Conditionals.ServiceModel">ServiceModel</MadCap:conditionalText> to follow when making the following decisions:</p>
        <ul>
            <li class="li_1">Selecting incoming entities</li>
            <li class="li_1">Queuing for output</li>
            <li class="li_1">Selecting a unit</li>
        </ul>
        <h5 class="NOTE">Note: The queuing rules for a location take effect only when entities are "queued" at the particular location due to being in a <u>blocked</u> state. In other words, the entities are ready to move to the next location, but the next location is not available due to insufficient capacity or to being inoperative.</h5>
        <p class="Graphic">
            <img src="5-1-21.jpg" MadCap:mediastyle="@media print { max-width: 4in; }" style="border-left-style: solid;border-left-width: 1px;border-left-color: #1e90ff;border-right-style: solid;border-right-width: 1px;border-right-color: #1e90ff;border-top-style: solid;border-top-width: 1px;border-top-color: #1e90ff;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #1e90ff;" />
        </p>
        <h4>Selecting Incoming Entities<MadCap:keyword term="Locations:rules:selecting incoming entity" /></h4>
        <p class="p">When a location becomes available and there is more than one entity waiting to enter, a decision must be made regarding which one to admit. The primary determining factor is the priority of the input routing. The entity with the highest routing priority will be admitted regardless of the incoming selection rule. However, if two or more entities have the same priority for claiming the location, then the location selects an incoming entity based on the incoming selection rules listed below.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:oldest by priority"></MadCap:keyword><b>Oldest by Priority  </b></span>Selects the entity waiting the longest among those having the highest routing priority.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:random" /><b>Random</b></span> Selects randomly with equal probability among all waiting entities. </p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:least available capacity"></MadCap:keyword><b>Least Available Capacity</b></span><span class="Element" style="line-height: 12pt;"></span> Selects the entity coming from the location having the least available capacity. Ties are broken by the entity waiting the longest.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:last selected location"></MadCap:keyword><b>Last Selected Location</b></span><span class="Element" style="line-height: 12pt;"></span> Selects the entity coming from the location that was selected last. Ties are broken by the entity waiting the longest. If no entities are waiting at the last selected location, the <span class="_Override" style="font-style: italic;">Oldest by Priority</span> rule takes effect.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:highest attribute value" /><b>Highest Attribute Value</b></span> Selects the entity with the highest attribute value for a specified attribute. Ties are broken by the entity that has been waiting the longest. Location attributes are also valid entries.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:lowest attribute value"></MadCap:keyword><b>Lowest Attribute Value</b></span><span class="Element" style="line-height: 12pt;"></span> Selects the entity which has the lowest attribute value for a specified attribute. Ties are broken by the entity waiting the longest. Location attributes are also valid entries.</p>
        <h4>Queuing For Output<MadCap:keyword term="Locations:rules:queuing for output" /></h4>
        <p class="p">When an entity finishes its operation at a location, other entities to finish ahead of it may not have departed. A decision must be made to allow the entity to leave or to wait according to some queuing rule. If one of the following queuing rules is not specified, “No Queuing” will be used.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Queue:no queuing"></MadCap:keyword><b>No Queuing</b></span><span class="Element" style="line-height: 12pt;"></span> Entities that have completed their operations at the current location are free to route to other locations independent of other entities that have finished their operations. If this option is selected it is not displayed in the Rules Box.</p>
        <p class="p"><span class="Bold"><b>First In, First Out (FIFO</b><MadCap:keyword term="FIFO:see Locations, rules;Queue:first in, first out (FIFO);First in, first out"></MadCap:keyword></span><span class="Helv_Bold" style="line-height: 12pt;">) </span><span class="Element">  The first entity completing operation must leave for its next location before the second entity completing its operation can leave, and so on.</span>
        </p>
        <p class="p"><span class="Bold"><b>Last In, First Out (LIFO</b><MadCap:keyword term="LIFO:see Locations, rules;Queue:last in, last out (LIFO);Last in, first out"></MadCap:keyword></span><span class="Helv_Bold" style="line-height: 12pt;">) </span><span class="Element">   Entities that have finished operations queue for output LIFO so the last one finished is the first to leave.</span>
        </p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Queue:by type" /><b>By Type</b></span> Entities that have finished operations queue for output FIFO by entity type so the routing for each entity type is processed independently of routings for all other types.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Queue:highest attribute value"></MadCap:keyword><b>Highest Attribute Value</b></span><span class="Element" style="line-height: 12pt;"></span> Entities that have completed operations queue for output according to the highest value of a specified attribute.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Queue:lowest attribute value"></MadCap:keyword><b>Lowest Attribute Value</b></span><span class="Element" style="line-height: 12pt;"></span> Entities that have completed operations queue for output according to the lowest value of a specified attribute.</p>
        <h4>Selecting a Unit<MadCap:keyword term="Locations:rules:selecting a unit" /></h4>
        <p class="p">If the location has multiple units, then incoming entities must select which available unit to use. One of the following rules may be selected. These decision rules apply to multi-unit locations only. </p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:first available" /><b>First Available</b></span> Selects the first available unit.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:by turn" /><b>By Turn</b></span> Rotates the selection among the available units.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:most available capacity" /><b>Most Available Capacity</b></span> Selects the unit having the most available capacity. This rule has no effect with single capacity units.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:fewest entries" /><b>Fewest Entries</b></span> Selects an available unit with the fewest entries.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:random" /><b>Random</b></span> Selects an available unit randomly.</p>
        <p class="p"><span class="Bold"><MadCap:keyword term="Entity:select:longest empty" /><b>Longest Empty</b></span> Selects the unit that has been empty the longest.</p>
        <p class="p">When specifying the decision rules for selecting incoming entities at a location, it is important to remember that the routing of an entity is also dependent on the queuing for output decision rules at the previous location. The following example will clarify this principle.</p>
        <h4>Rules Dialog Box Example<MadCap:keyword term="Locations:rules:example" /></h4>
        <p class="p" MadCap:conditions="PM-MM Conditionals.ServiceModel">Consider a location, Que1, which has a “Last In, First Out (LIFO)” as the queuing for output rule. Suppose that two other locations, Que2 and Que3, have “No Queuing” for the output rule. The three locations, Que1, Que2, and Que3 feed into Customer_Service which has an “Oldest by Priority” rule for selecting incoming entities. </p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.MedModel">Consider a location, Waiting room 1, which has a “Maximum Attribute - Acuity” as the queuing for output rule. Suppose that two other locations, Waiting rooms 2 and 3, have “No Queuing” for the output rule. The three locations are occupied by patients waiting to go to Exam room 1 which has an “Maximum Attribute - Acuity” rule for selecting the next patient. </p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.ProModel">Consider a location, Loc1, which has a “Last In, First Out (LIFO)” as the queuing for output rule. Suppose that two other locations, Loc2 and Loc3, have “No Queuing” for the output rule. The three locations, Loc1, Loc2, and Loc3 feed into Loc4 which has an “Oldest by Priority” rule for selecting incoming entities.</p>
        <p class="image_nobreak" MadCap:conditions="PM-MM Conditionals.MedModel">
            <img src="8_100.jpg" MadCap:mediastyle="@media print { max-width: 4in; }" MadCap:conditions="PM-MM Conditionals.MedModel" style="border-left-style: solid;border-left-width: 1px;border-left-color: #1e90ff;border-right-style: solid;border-right-width: 1px;border-right-color: #1e90ff;border-top-style: solid;border-top-width: 1px;border-top-color: #1e90ff;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #1e90ff;" />
        </p>
        <p class="image_nobreak" MadCap:conditions="PM-MM Conditionals.ProModel">
            <img src="8_107.png" MadCap:mediastyle="@media print { max-width: 4in; }" MadCap:conditions="PM-MM Conditionals.ProModel" style="border-left-style: solid;border-left-width: 1px;border-left-color: #1e90ff;border-right-style: solid;border-right-width: 1px;border-right-color: #1e90ff;border-top-style: solid;border-top-width: 1px;border-top-color: #1e90ff;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #1e90ff;" />
        </p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.MedModel">Two patients are waiting at Waiting room 1. The patient waiting the longest, Patient A, has been waiting 10 minutes. The other patient, Patient B, which arrived after Patient A, has been waiting 5 minutes. At Waiting room 2, the patient waiting for the exam room, Patient C, has been waiting 7 minutes. At Waiting room 3, Patient D has been waiting for the exam room for 3 minutes. All patients have an attribute named Acuity but only Patient C has an acuity value higher than 0.</p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.MedModel">The patient which will enter the exam room first is Patient C. Even though Patient A has been waiting ten minutes, Patient A must wait until Patient C has been seen in the exam room because Patient C is ahead of Patient A in the input queue according to the “Highest Attribute - Acuity” selection rule. Once Patient C is finished in the exam room, Patient A will be seen followed by Patient B and then Patient D.</p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.ProModel">Two parts are queued for output at Loc1. The part waiting the longest, EntA, at Loc1 has been waiting 10 minutes. The other part, EntB, which queued for output after EntA, has been waiting 5 minutes. At Loc2, the part queued for output, EntC, has been waiting 7 minutes. At Loc3, the part queued for output that has been waiting the longest, EntD, has waited 3 minutes.</p>
        <p class="p" MadCap:conditions="PM-MM Conditionals.ProModel">The part to enter Loc4 first is EntC at Loc2 which waited 7 minutes. Even though EntA has been waiting ten minutes, it must wait until EntB has been routed, because EntB is ahead of it in the output queue according to the LIFO queuing rule. Once Loc4 finishes processing EntC, EntB at Loc1 enters Loc4. EntB enters before EntA because entities must be output before a destination selects incoming entities. Next, EntA at Loc1 enters Loc4 after which EntD at Loc3 enters Loc4.</p>
    </body>
</html>