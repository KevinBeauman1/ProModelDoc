<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="301" MadCap:lastWidth="1518">
    <head>
    </head>
    <body>
        <h3><a name="C-06_1157716610_1086361"></a><a name="C-06_1157716610_30146"></a>Subroutines vs. Macros<MadCap:keyword term="Subroutines:subroutines vs. macros;Macros:subroutines vs. macros" /></h3>
        <p class="p">Although subroutines and macros work similarly, they have subtle differences. Any logic may use both macros and subroutines. The main difference is in the way they are used. Only subroutines can be used when you need to pass arguments, get a return value, or activate the independent execution of logic. Only macros can be used when defining scenario parameters.</p>
        <p class="p">Macros may be used in any expression field, but the macro may only contain an expression (i.e., Entries(LOC1), U(5,1)). When a macro is used in a logic field, the macro may include any logic element valid in that logic field.</p>
        <p class="p">Subroutines may also be used in an expression field provided that the RETURN statement is used to return a value to the expression field.  When a subroutine is used to represent one or more logic statements, the subroutine may only include statements valid for the particular context.</p>
    </body>
</html>