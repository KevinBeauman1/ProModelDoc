<?xml version="1.0" encoding="utf-8"?>
<html MadCap:lastBlockDepth="2" MadCap:lastHeight="1432" MadCap:lastWidth="995" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Resources/Stylesheets/PM-MM Stylesheet 2, linked.css" rel="stylesheet" />
    </head>
    <body>
        <h1>IncOnOrderQty</h1>
        <h5>
            <MadCap:keyword term="statements:inconorderqty;inconorderqty" />Statement</h5>
        <h2>Syntax samples</h2>
        <p>Inc (&lt;storage name&gt;, &lt;expression&gt;)</p>
        <p>IncOnOrderQty(StorageBin, NewOrdersVar)<br />IncOnOrderQty(StorageBlock, - NumRejectsVar)</p>
        <h2>Description</h2>
        <p>Increments or decrements the on order value (total entities ordered but not yet arrived at the storage) for a Storage activity. In some situations, entities that were ordered through a storage reorder might exit the system prior to arriving at the storage activity. If this is the case, use IncOnOrderQty to adjust the on order quantity for the storage it remains synched with how many entities it is expecting to arrive at the storage. </p>
        <h2>Valid In</h2>
        <p>Activity, arrival, and route logic.</p>
        <h2>Components</h2>
        <p><b>&lt;storage name&gt;</b>
        </p>
        <p>The name of a storage activity.</p>
        <p><b>&lt;expression&gt;</b>
        </p>
        <p>The amount to increment or decrement the on order value of the specified storage.</p>
        <h2>Example</h2>
        <p>In the following example, 1000 Bolts are reordered to BoltStorage whenever the inventory level drops below 50. When new Bolts arrive they are inspected for quality of sale. If they do not meet the standard, they are put into a discount bin and sold at a reduced price, which happens about 1% of the time. To keep the expected order quantity in synch at BoltStorage, IncOnOrderQty is used to decrement the on order quantity for BoltStorage whenever a Bolt fails inspection and routes to BargainBin.</p>
        <p class="p_11">Real passInspect = Rand(100)<br />If passInspect &lt;= 1.0 Then<br />{</p>
        <p class="p_12">aDest = BargainBolt<br />IncOnOrderQty(BoltStorage, -1)</p>
        <p class="p_11">}<br />Else</p>
        <p class="p_12">aDest = BoltStorage</p>
        <h5>See Also</h5>
        <p class="p"><a href="storageProperties.htm" class="a_11">Storages</a>
        </p>
    </body>
</html>