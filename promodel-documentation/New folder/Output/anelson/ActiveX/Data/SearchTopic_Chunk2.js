define({"157":{i:0.00132844475584566,u:"../Content/CustomizeExternalData.htm",a:"Customize External Data The simulated data available to display in Data Graphics can be easily \n customized so that only specific simulation results are collected.  Limiting \n the amount of results to only the metrics needed will shorten the amount \n of time it takes to refresh the data in the ...",t:"Data Graphics"},"158":{i:0.00132844475584566,u:"../Content/DataGraphics.htm",a:"  Process Simulator utilizes the powerful capability of Data Graphics \n and External Data linking in Microsoft Visio  2010 Professional and Premium. \n  When linked \n to simulated scenario results, Data Graphics provide a more visually interactive \n means to model analysis and optimization. Resource ...",t:"Data Graphics"},"159":{i:0.00132844475584566,u:"../Content/DataGraphicsAssistance.htm",a:"More Information about Visio Data Graphics To learn more about Data Graphics in Microsoft  Visio, \n including how to create custom Data Graphics, please visit the Microsoft \n website:  www.microsoft.com . \n ",t:"Data Graphics"},"160":{i:0.0056159813064892,u:"../Content/Debug.htm",a:"Statement Syntax samples Debug Description Brings up Process Simulator’s debugger. Use Debug to step through logic one statement at a time and examine variable and attribute values while developing a model. After a model is working, Debug statements are generally removed. Valid In Any logic. Example ...",t:"Debug"},"161":{i:0.00132844475584566,u:"../Content/DebuggingProcessSimulatorLogic.htm",a:"The Debugger is a convenient and efficient way to test or follow the \n processing of any logic defined in your model. The debugger is used to \n step through logic one statement at a time and examine variables and attributes \n while a model is running.  Before discussing the details of the Debug ...",t:"Debugging Process Simulator Logic"},"162":{i:0.00231041445746442,u:"../Content/Dec.htm",a:"Statement Syntax samples Dec \u003cname\u003e{, \u003cexpression\u003e} Dec Var1 Dec Attr1, 5 Description Decrements a variable, array element, or attribute by the value of a specified numeric expression. To decrement a variable, attribute, or array element when the current entity actually leaves a location, use Dec in ...",t:"Dec"},"163":{i:0.00132844475584566,u:"../Content/DefaultProcessSimulatorDataGraphics.htm",a:"Default Process Simulator Data Graphics The first time you open the Data Graphics window, you will notice that \n Process Simulator has approximately 13 default data graphics. The default data graphics are:  ",t:"Data Graphics"},"164":{i:0.00132844475584566,u:"../Content/DefiningAnAttribute.htm",a:"You want to define an attribute for use in making decisions or collecting information with respect to individual entities during the simulation.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( ...",t:"Defining an Attribute"},"165":{i:0.00245766114671717,u:"../Content/DefiningAOneTimeOrRepeatingTimer.htm",a:"At a particular time or recurring time in the simulation you would like to execute some logic (set variable values, order entities into the system, etc.).   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( ...",t:"Defining a One-time or Repeating Timer"},"166":{i:0.00161074885356354,u:"../Content/DefiningAProcess.htm",a:"A Process Simulator process is defined by placing shapes onto the Visio layout,\n connecting the shapes, and then defining the properties and logic for the\n shapes and connections. This is done to accurately model the flow of entities through a system in order to improve real-world performance. How ...",t:"Defining a Process"},"167":{i:0.00132844475584566,u:"../Content/DefiningAVariable.htm",a:"You want to define a variable for use in making decisions or collecting information during the simulation.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( http://www.promodel.com/solutionscafe/howto/) . Solution ...",t:"Defining a Variable"},"168":{i:0.00160228187596185,u:"../Content/DefiningConnectionProperties.htm",a:"Connections specify routing of entities from one activity to another, \n or the initial arrival of entities into the process at an activity. To define a connection as a routing, arrival, or plain connector, right-\nclick on the connection and choose either  Routing , \n  Arrival , or Plain Graphic from ...",t:"Defining Connection Properties"},"169":{i:0.00132844475584566,u:"../Content/DefiningInitializationLogic.htm",a:"Cause some logic to be executed at the start of the simulation. This may be the setting of variables, an initial ordering of entities, an initial send request, etc.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( ...",t:"Defining Initialization Logic"},"170":{i:0.00132844475584566,u:"../Content/DefiningLogic.htm",a:"Process Simulator logic controls the flow of entities through your process and\n defines what happens to them along the way. For information and theory on\n controlling this flow of entities, see  Flow Control . Data entered in shape property fields is, in its basic form, a simple form of logic.\n More ...",t:"Defining Logic"},"171":{i:0.00132844475584566,u:"../Content/DefiningModelElements.htm",a:"Defining Model Elements Access to  Attributes ,  Variables , \n Arrays ,  Macros ,  Subroutines ,  Resource Groups ,  External Arrivals ,  User Distributions ,  Initialization and Termination Logic , and  External Files  can be found in \n the Model Elements group on the Process Simulator \n ribbon and ...",t:"Defining Variables, Attributes, and Resource Groups"},"172":{i:0.00179048460777377,u:"../Content/DefiningShapeProperties.htm",a:"Each shape type in a Process Simulator model, except a plain graphic, has properties that determine how that shape functions during simulation. Properties of shapes include such things as processing logic for activities, shifts assignments for resources, costing for entities, etc. Shape properties ...",t:"Defining Shape Properties"},"173":{i:0.00132844475584566,u:"../Content/Detach.htm",a:"When   Select whether to detach the attached\n entities before or after the current activity. If you define a detach routing\n for an activity,\n you\n may not have an attach routing coming back into the same activity, unless\n the Detach is defined as After Activity. Condition   This optional condition ...",t:"Detach"},"174":{i:0.00132844475584566,u:"../Content/DisassemblyActivities.htm",a:"One or more entities are detached from a base entity at an activity. It is assumed that the entities to be detached have been previously attached to the base entity (see  Assembly Activities ). If you want to detach entities that weren’t previously attached at some activity in the model, you must ...",t:"Disassembly Activities"},"175":{i:0.00132844475584566,u:"../Content/Disclaimer.htm",a:"The information in this guide is provided by ProModel Corporation to document Process Simulator 2016. The contents of this manual are subject to change without notice and do not represent a commitment on the part of ProModel Corporation. The software described in this guide is supplied under a ...",t:"Disclaimer"},"176":{i:0.0207309441611263,u:"../Content/Display.htm",a:"Statement Syntax samples Display \u003cstring expression\u003e  Display “Now beginning 100th process” Display Number_in_Queue Display “Var1 =” $ Var1 $ “and Attr1 =” $ Attr1 Description Pauses the simulation and displays a message. The simulation will resume when the user selects OK. The concatenation ...",t:"Display"},"177":{i:0.00132844475584566,u:"../Content/DistributionBuilder.htm",a:"The Distribution Builder allows you to generate  statistical \n distributions  with the syntax that Process Simulator will recognize. Select the type of distribution you would like to build from the list on the left, and then fill out the fields available for that distribution. If \n you enter ...",t:"Distribution Builder"},"178":{i:0.00719999046523231,u:"../Content/Distributions.htm",a:"Data is seldom in a form ready for use in a simulation model. Usually some analysis and conversion needs to be performed for the data to be useful as an input parameter to the simulation. Random phenomena must be fitted to some standard, theoretical distribution such as a normal or exponential ...",t:"Distributions"},"179":{i:0.0013702675851372,u:"../Content/DownQty.htm",a:"Function Syntax samples DownQty(\u003cactivity\u003e or \u003cresource\u003e) If DownQty(Act1) \u003e 3 Then aDest = Act2 Display “Total Res1 Down Now:” $ DownQty(Res1) Description Returns the number of activity or resource units down at the time of the call. Use this function to make decisions based on how many activity or ...",t:"DownQty()"},"180":{i:0.00913284467017194,u:"../Content/Entity.htm",a:"Function Syntax samples Entity({\u003cexpression\u003e}) Entity() Entity(Var1) Description Returns the name-index number of the current entity or a particular entity in an entity group. This function is especially useful in logic or subroutines that vary depending on which entity calls them. Use Entity() to ...",t:"Entity"},"181":{i:0.00132844475584566,u:"../Content/EntityArrivalModeling.htm",a:"Entities may enter a system in different quantities, mixes and timing. Most ways in which entities arrive are defined easily defined using the Arrival properties dialog. These include periodic, continuous, scheduled, ordered and pattern arrivals. Sometimes, however, there are special arrival ...",t:"Entity Arrival Modeling"},"182":{i:0.00132844475584566,u:"../Content/EntityBasedActivities.htm",a:"The activity time or other activity action (JOIN, SPLIT, ASSIGN, etc.) is based on the type of entity being processed.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( http://www.promodel.com/solutionscafe/howto/) .  ...",t:"Entity-Based Activities"},"183":{i:0.00302226934215292,u:"../Content/EntityCreatingActivities.htm",a:"One or more new entities are created as a result of an entity activity. The modeler can decide whether the incoming entity is to persist or disappear after the new entities are created.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel ...",t:"Entity Creating Activities"},"184":{i:0.00163283843555352,u:"../Content/EntityProperties.htm",a:"Entity Properties Right-click on an entity shape, select Properties, and the Entity properties window displays. There are three sections in the Entity properties window. General Notes Advanced Name This is the simulation-friendly name of the entity and should be used when referenced in logic. It is ...",t:"Entity Dialog"},"185":{i:0.0013702675851372,u:"../Content/Entries.htm",a:"Function Syntax samples Entries(\u003cactivity\u003e) Display “Act1 has had” $ Entries(Act1) $ “entries.” Description Returns the total number of entity entries to an activity. This function returns an integer. Valid In Any logic Components \u003cactivity\u003e The activity to examine. Example \n            The Stores ...",t:"Entries()"},"186":{i:0.00132844475584566,u:"../Content/EntryExitInSubmodel.htm",a:"Entry and Exit Points in a Submodel In addition to linking an activity to a submodel, connections within the submodel must be defined to specify where entities from the parent model enter the subprocess and where entities exit the submodel to return to the parent model. These connections are ...",t:"Hierarchical Modeling Rules"},"187":{i:0.00913284467017194,u:"../Content/Exp.htm",a:"Function Syntax samples Exp(\u003cexpression\u003e) Real1 = Exp(Real2) Description Returns the exponential of an expression. This function is equivalent to ex. Valid In Any Logic. This function returns a real number. Components \u003cexpression\u003e Exp() returns the exponential of this expression. See Also Ln",t:"Exponential"},"188":{i:0.00153193985350474,u:"../Content/ExternalArrivals.htm",a:"An External Arrivals file is an Excel spreadsheet (.xls or .xlsx format only) file containing arrival information normally specified in a Periodic arrival connection. One or more arrival files may be referenced in the External Arrivals table. External arrival files are automatically read in at the ...",t:"External Arrivals"},"189":{i:0.0177940709965407,u:"../Content/ExternalFiles.htm",a:"External files provides you the ability to read and write data into and out of your model during simulation. This is accomplished with text files that are referenced in the External Files grid. For example, you could collect your own custom statistics using variables in your model logic and in ...",t:"External Files"},"190":{i:0.00132844475584566,u:"../Content/Flexible.htm",a:"Destination \n   Enter an attribute, array, or variable that will resolve into an existing activity name (i.e. an activity index number) or right-click to view the context menu showing the available data elements. This determines the next activity to which an entity will route, and the destination is ...",t:"Flexible"},"191":{i:0.00207278870549165,u:"../Content/FlowControl.htm",a:"Before defining the properties of the Process Simulator objects that \n have been placed on the layout, it is important to understand how entity \n flow occurs when a Process Simulator model is run. Entities start the \n process at the activities where Arrivals have been defined. The activity \n ...",t:"Flow Control"},"192":{i:0.00207899438510087,u:"../Content/Free.htm",a:"Statement Syntax samples Free {\u003cquantity\u003e} \u003cresource\u003e{, {quantity} \u003cresource\u003e...}  Free Res1, 2 Res2, 5 Res3A Free All Free Res(Attr1) Description Frees resources which are currently “owned” by the entity. These resources must have been captured through a Get or Jointly Get statement. Valid In ...",t:"Free"},"193":{i:0.00234090707255598,u:"../Content/FreeCap.htm",a:"Function Syntax samples FreeCap(\u003cactivity\u003e) Send FreeCap(Review) Form To Review Description Returns the available capacity of an activity. This function returns an integer. Valid In Any logic. Components \u003cactivity\u003e The name of the activity to examine. The Loc() function may also be used here. ...",t:"FreeCap"},"194":{i:0.00234090707255598,u:"../Content/FreeUnits.htm",a:"Function Syntax samples FreeUnits(\u003cactivity\u003e or \u003cresource\u003e) Use (FreeUnits(Res1)) Res1 For 5 min Description Returns the free units of an activity or resource. Valid In  Any logic Components \u003cactivity\u003e The name of the activity to examine. \u003cresource\u003e The name of the resource to examine. Example \n     ...",t:"FreeUnits()"},"195":{i:0.00132844475584566,u:"../Content/Functions.htm",a:"Functions return information about the objects in your simulation, as \n well as the simulation itself. For example, you may use functions to obtain \n the simulation clock time, an activity\u0027s capacity, or a random number. \n Not all functions are available with every statement. There are three types ...",t:"Functions"},"196":{i:0.0245582638169284,u:"../Content/Get.htm",a:"Statement Syntax samples Get {\u003cquantity\u003e} \u003cresource\u003e {,\u003cpriority\u003e} {And or Or {\u003cquantity\u003e} \u003cresource\u003e {,\u003cpriority\u003e}...} Get Res1 Get 3 Res1, 5 Get 2 Res1 OR 3 Res2 Get Res1, 3 And (Res2 Or Res3) Get Res(Skill_required) Description Captures a specified number of resources as they become available. If ...",t:"Get"},"197":{i:0.00897085614857617,u:"../Content/GetCost.htm",a:"Function Syntax samples GetCost() Description Returns the cost of the current entity executing the logic. Use this function to return the entity’s actual, accumulated dollar amount. Valid In Activity logic only. Example The following example shows how to use the GetCost() function to generate a Time ...",t:"GetCost"},"198":{i:0.0013702675851372,u:"../Content/GetReplicationNum.htm",a:"Function Syntax samples GetReplicationNum() vRep = GetReplicationNum() Description Returns the number of the currently running replication. Valid In Any Logic. Example Based on the current replication, you may want to make a decision regarding the exporting of array data. In this case, you could use ...",t:"GetReplicationNum"},"199":{i:0.00766744466438838,u:"../Content/GetResRate.htm",a:"Function Syntax samples GetResRate({\u003cresource\u003e}) GetResRate() GetResRate(Operator1) Description Returns the cost rate specified in the shape properties or through the SetRate() function for a resource currently owned by the entity making the function call. When used without the optional \u003cresource\u003e ...",t:"GetResRate"},"200":{i:0.00132844475584566,u:"../Content/Getting_Started.htm",a:"To get started with Process Simulator after installing it: From the Windows Taskbar Click the Windows Start button Type \"Process Simulator\" Select Process Simulator OR From the Desktop, double-click the Process Simulator shortcut icon. OR From within Visio Click the File ribbon tab. Select New from ...",t:"Getting Started with Process Simulator"},"201":{i:0.00175852338010471,u:"../Content/GroupQty.htm",a:"Function Syntax samples GroupQty({\u003centity name\u003e}) Order GroupQty(Part1) Part2 To Act1 If GroupQty(Part1) \u003e 5 Then... Description Returns the number of entities of a specified type in a batched or attached entity. If no name is specified, it returns the entire group quantity. If it is an attached ...",t:"GroupQty"},"202":{i:0.00226952979374614,u:"../Content/HierarchicalModeling.htm",a:"Hierarchical modeling is used to link a model (process) to one or more \n submodels (subprocesses), which can have submodels of their own. This technique \n is useful for modeling at a high-level, which then uses submodels to \n define the specific lower-level events of the process. It can also be used ...",t:"Hierarchical Modeling"},"203":{i:0.0022930384018568,u:"../Content/HierarchicalModelingRules.htm",a:"The following rules apply when simulating a hierarchical \n model. If multiple hyperlinks are defined for an activity, \n the first hyperlink found that links another page or a .vsdx file \n with simulation properties is used. All other hyperlinks are ignored, \n even if they link to another page or ...",t:"Hierarchical Modeling Rules"},"204":{i:0.00132844475584566,u:"../Content/If.htm",a:"  Executes a statement block, contained in open and closed brackets, if \n the Boolean expression is true. If an  statement is included and the \n Boolean expression is false, an alternate statement or statement block \n is executed. Any statements outside of the open and closed brackets will \n execute ...",t:"If"},"205":{i:0.00341890182702918,u:"../Content/IfThenElse.htm",a:"Statement Syntax samples If \u003cBoolean expression\u003e Then \u003cstatement 1\u003e {Else \u003cstatement 2\u003e} If Var1 = 5 Then Wait 2 min If (Attr2 = 5) Or (Var5 \u003c\u003e 0) Then Wait 2 min Else Wait 3 min If Var1 \u003e Attr2 Then { Var1 = Attr2 \tWait Attr1 } Else { Inc Var1  Wait Attr2 } Description Executes a statement or ...",t:"If...Then...Else"},"206":{i:0.00132844475584566,u:"../Content/ImportExportModelData.htm",a:"Exporting Process Simulator model data allows you to view and validate the details of all activities, entities, resources, arrivals, routings, etc. in Microsoft Office Excel. You can then modify many of the details and import those changes back into your Process Simulator model.  To import from or ...",t:"Import-Export Model Data"},"207":{i:0.00231041445746442,u:"../Content/Inc.htm",a:"Statement Syntax samples Inc \u003cname\u003e{, \u003cexpression\u003e} Inc Var1  Inc Attr2, 5+Var1 Description Increments a variable, array element, or attribute by the value of a specified numeric expression. When counting the number of entities a location has processed, increment a variable at the end of the ...",t:"Inc"},"208":{i:0.00980405135205956,u:"../Content/IncEntCost.htm",a:"Statement Syntax samples IncEntCost \u003cexpression\u003e IncEntCost 15 IncEntCost -15 IncEntCost ValueAddedAttr Description Enables you to increment the cost (positively or negatively) of the current entity by a given amount. Use this function to add to the entity’s actual, accumulated dollar amount. Valid ...",t:"IncEntCost"},"209":{i:0.00980405135205956,u:"../Content/IncLocCost.htm",a:"Statement Syntax samples IncLocCost \u003cexpression\u003e IncLocCost 15 IncLocCost -15  IncLocCost SetupCostVar Description Enables you to increment the cost (positively or negatively) of the current activity by a given amount. Use this function to add to the activity’s actual, accumulated dollar amount. ...",t:"IncLocCost"},"210":{i:0.00132844475584566,u:"../Content/IncOnOrderQty.htm",a:"Statement Syntax samples Inc (\u003cstorage name\u003e, \u003cexpression\u003e) IncOnOrderQty(StorageBin, NewOrdersVar) IncOnOrderQty(StorageBlock, - NumRejectsVar) Description Increments or decrements the on order value (total entities ordered but not yet arrived at the storage) for a Storage activity. In some ...",t:"IncOnOrderQty"},"211":{i:0.00763169887841323,u:"../Content/IncResCost.htm",a:"Statement Syntax samples IncResCost \u003ccost expression\u003e {,\u003cresource\u003e} IncResCost 10 IncResCost GetResRate(Operator1)*20, Operator1  Description Enables you to increment the cost (positively or negatively) of a resource currently owned by the entity executing the statement. Use this function to add to ...",t:"IncResCost"},"212":{i:0.00132844475584566,u:"../Content/Index.htm",a:"Index",t:"Index"},"213":{i:0.00153193985350474,u:"../Content/InitializationTerminationLogic.htm",a:"Initialization and Termination Logic Initialization Logic Initialization logic occurs at the very start of simulation and allows you to initialize arrays, variables, and other elements.  Other common uses of initialization logic include: Displaying messages Prompting for values Activating ...",t:"Attributes"},"214":{i:0.00132844475584566,u:"../Content/Installing_Process_Simulator.htm",a:"How to download, install, and license Process Simulator from the URL link Process Simulator works with Windows 7, 8.1, and 10. To download, install, and license Process Simulator, perform the following procedures: Confirm that Microsoft Visio is installed and registered on your computer. If you do ...",t:"Installing Process Simulator"},"215":{i:0.00885411610180314,u:"../Content/Int.htm",a:"Statement Syntax samples Int \u003cname1\u003e{= \u003cexpression1\u003e, \u003cname2\u003e= \u003cexpression2\u003e...)  Int Count Int Count = 1 Int Count = 1, Test = Rand(100) Description Creates a local variable of type integer. Local variables work much the same as attributes, except that they only are available within the logic that ...",t:"Int"},"216":{i:0.00395162821934905,u:"../Content/Intellisense.htm",a:"The logic for a model can be constructed with valid statements and expressions within a logic window. Logic windows possess\na number of features that facilitate the writing of logic, and one such feature is Intellisense. Intellisense is a feature\n that becomes active when you start to type any ...",t:"Intellisense"},"217":{i:0.00132844475584566,u:"../Content/Keeping_a_Resource_through_2_or_More_Consecutive_Activities.htm",a:"Consecutive activities require the continued use of a resource. (If this is the only resource working at these activities, it may be possible to model the entire activity sequence as a single activity.)   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be ...",t:"Keeping a Resource Through Two or More Consecutive Activities"},"218":{i:0.00132844475584566,u:"../Content/Lean_Modeling.htm",a:"Lean Modeling There are many Lean processing techniques that are easily modeled using Process Simulator. Here are a few of them.",t:"Lean Modeling"},"219":{i:0.0022930384018568,u:"../Content/LinkingASubmodel.htm",a:"Linking a Submodel Link to a Subprocess A quick way to link an activity to a subprocess is to utilize Visio\u0027s subprocess capability. To do this, follow these steps: Select the activity you wish to link to a subprocess. From the Visio Insert ribbon select the \n Link to Existing list button.  If you ...",t:"Defining a Hyperlink for Hierarchical Modeling"},"220":{i:0.00913284467017194,u:"../Content/Ln.htm",a:"Function Syntax samples Ln(\u003cexpression\u003e) Real1 = Ln(Real2) Description Returns the natural logarithm of an expression. Valid In Any logic. This function returns a real number. Components \u003cexpression\u003e Ln() returns the natural logarithm of this expression. See Also Exp Please Note: To get a logarithm ...",t:"Ln"},"221":{i:0.00913284467017194,u:"../Content/Location.htm",a:"Function Syntax samples Location() Attr1 = Location() If Location() = ApprovalActivity Then Wait 4 min Description Returns the current activity’s name-index number. This function is especially useful in subroutines that vary depending on which activity’s logic calls them. By using a Location() ...",t:"Location"},"222":{i:0.0024932121407482,u:"../Content/Log.htm",a:"Statement Syntax samples Log \u003cstring\u003e, \u003cexpression\u003e Log “Activity Time”, Attr1 Description Process Simulator assumes that the time stored in the expression is in the model’s default time units, which is minutes. Use the Log statement to record the time from one point in the process to another by ...",t:"Log"},"223":{i:0.00185367229486468,u:"../Content/LogicWindows.htm",a:"Logic Windows The Logic windows provide a convenient interface for entering custom logic for the objects in your process. If you\u0027re not sure where to start with logic, the  Statement List  on the toolbar,  Intellisense , and  Syntax Guide  are features that will help you.   Logic Window The Logic ...",t:"Free Form Logic"},"224":{i:0.00153193985350474,u:"../Content/Macros.htm",a:"A macro is an element which can represent a distribution or a number that is repetitively used throughout your model. Assign the distribution or number to the macro and then enter the macro in most shape properties or logic, for example. Wherever the macro is encountered, the distribution or number ...",t:"Macros"},"225":{i:0.00132844475584566,u:"../Content/MapArr.htm",a:"Statement Syntax samples MapArr \u003carray name\u003e {To \u003cvariable name\u003e} MapArr Array1 To Var10 MapArr Array5 Description Starting with the variable you specify, the MapArr statement maps each individual cell of an array to a unique variable (i.e. if you define 12 cells for the array, the array will map to ...",t:"MapArr"},"226":{i:0.00132844475584566,u:"../Content/Minitab.htm",a:"Minitab Below is an example of a Six Sigma Analysis chart in Minitab. See  See Six Sigma Analysis with Minitab on 2 for more information.",t:"Minitab"},"227":{i:0.00132844475584566,u:"../Content/Miscellaneous.htm",a:"Miscellaneous Some modeling needs are related to special needs that don’t fall neatly in a category. Below are some of these situations.",t:"Miscellaneous"},"228":{i:0.00132844475584566,u:"../Content/Mixed_Model_Assembly.htm",a:"Sometimes different products are assembled at the same activity requiring different components to complete the assembly.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( http://www.promodel.com/solutionscafe/howto/) . ...",t:"Mixed-model Assembly"},"229":{i:0.00132844475584566,u:"../Content/Modeling_Activities.htm",a:"Activities are the processing steps that are performed on entities as they flow through the system. To model an activity you often need to specify the activity time, the resource(s) that are used, the type of activity (assembly, disassembly, etc.), and any special logic that should get executed. ...",t:"Modeling Activities"},"230":{i:0.00132844475584566,u:"../Content/Modeling_Downtimes.htm",a:"An activity or resource may go down or be taken off line for a variety of reasons. When this happens it is no longer available for use. Downtimes may be interruptive or non-interruptive. If non-interruptive, the current activity is allowed to complete before the activity or resource goes down. ...",t:"Modeling Downtimes"},"231":{i:0.00132844475584566,u:"../Content/Modeling_Elements.htm",a:"Modeling Elements A Process Simulator model consists of  Shapes  and  Connections  that collectively define a\n process.",t:"Modeling Elements"},"232":{i:0.00132844475584566,u:"../Content/Modeling_Environment.htm",a:"Modeling Environment When you open Process Simulator it includes everything you need in the Visio window.",t:"Modeling Environment"},"233":{i:0.00132844475584566,u:"../Content/Modeling_How-To\u0027s.htm",a:"Learning how to use Process Simulator requires more than just becoming familiar with the product features and menus. It also requires an understanding of how to correctly use these features and menus to create representative models of actual business processes. Beginners to simulation quickly learn ...",t:"Modeling How-To\u0027s"},"234":{i:0.00132844475584566,u:"../Content/Modeling_Periodic_Scheduled_Downtimes.htm",a:"An activity is periodically taken off line for routine scheduled maintenance, etc.   The model used for this example, as well as all of the modeling \"how-to\" examples,  can be found in the ProModel Solutions Café ( http://www.promodel.com/solutionscafe/howto/) .  A video demonstrating this solution ...",t:"Modeling Periodic, Scheduled Downtimes"},});